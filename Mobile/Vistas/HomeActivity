package amsi.dei.estg.ipleiria.rartravel.vistas;

import static androidx.core.content.ContextCompat.getSystemService;

import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.Context;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Build;
import android.os.Bundle;
import android.view.View;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import org.eclipse.paho.android.service.MqttAndroidClient;
import org.eclipse.paho.client.mqttv3.IMqttActionListener;
import org.eclipse.paho.client.mqttv3.IMqttToken;
import org.eclipse.paho.client.mqttv3.MqttClient;
import org.eclipse.paho.client.mqttv3.MqttConnectOptions;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.eclipse.paho.client.mqttv3.MqttSecurityException;
import org.eclipse.paho.client.mqttv3.persist.MemoryPersistence;

import amsi.dei.estg.ipleiria.rartravel.R;

public class HomeActivity extends AppCompatActivity {

    public static final String START_FRAGMENT = "Fragmento Inicial";
    public static final String TOKEN = "token";
    public static final String USERID = "userid";
    public static final String USERNAME = "username";
    public static final String CHANNEL_ID = "canal";
    String token;
    String userid;
    String username;

    TextView tvUsername;

    //Mosquitto
    private MqttAndroidClient client;
    private final MemoryPersistence persistence = new MemoryPersistence();

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);
        getSupportActionBar().hide();

        tvUsername = findViewById(R.id.tvUsernameHome);

        token = getIntent().getStringExtra(LoginActivity.TOKEN_LOGIN);
        userid = getIntent().getStringExtra(LoginActivity.USER_ID);
        username = getIntent().getStringExtra(LoginActivity.USERNAME);

        tvUsername.setText(username);

        //Coisas do mosquitto
        final MqttAndroidClient mqttAndroidClient = new MqttAndroidClient(this.getApplicationContext(), "tcp://10.0.2.2:1883", MqttClient.generateClientId(), persistence);
        mqttAndroidClient.setCallback(new MosquittoCallBack(this, userid));
        MqttConnectOptions mqttConnectOptions = new MqttConnectOptions();
        mqttConnectOptions.setCleanSession(true);

        try{
            mqttAndroidClient.connect(mqttConnectOptions, null, new IMqttActionListener() {
                @Override
                public void onSuccess(IMqttToken asyncActionToken) {
                    System.out.println("Connection Success!");
                    try {
                        mqttAndroidClient.subscribe("PACKAGES", 0);
                        mqttAndroidClient.subscribe("compraUser"+userid, 0);
                        mqttAndroidClient.subscribe("compraValidadaUser"+userid, 0);
                    } catch (MqttException ex) {

                    }
                }

                @Override
                public void onFailure(IMqttToken asyncActionToken, Throwable exception) {
                    System.out.println("Connection Failure!");
                    System.out.println("throwable: " + exception.toString());
                }
            });
        } catch (MqttException ex) {
            System.out.println(ex.toString());
        }


        if(token != null){
            SharedPreferences sharedPreferences = getSharedPreferences("MySharedPref",Context.MODE_PRIVATE);
            SharedPreferences.Editor editor = sharedPreferences.edit();
            editor.putString(TOKEN, token);
            editor.putString(USERID, userid);
            editor.putString(USERNAME, username);
            editor.apply();
        }

        //Metodo para criar o canal
        createNotificationChannel();

    }

    @Override
    protected void onResume() {
        super.onResume();
        SharedPreferences sharedPreferences = getSharedPreferences("MySharedPref", Context.MODE_PRIVATE);
        username = sharedPreferences.getString(USERNAME, "");
        tvUsername.setText(username);
    }


    private void createNotificationChannel() {
        // Create the NotificationChannel, but only on API 26+ because
        // the NotificationChannel class is new and not in the support library
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            CharSequence name = "notifications";
            String description = "send notifications";
            int importance = NotificationManager.IMPORTANCE_DEFAULT;
            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);
            channel.setDescription(description);
            // Register the channel with the system; you can't change the importance
            // or other notification behaviors after this
            NotificationManager notificationManager = getSystemService(NotificationManager.class);
            notificationManager.createNotificationChannel(channel);
        }
    }

    public void perfil(View view) {
        Intent intent = new Intent(this, MenuMainActivity.class);
        intent.putExtra(START_FRAGMENT, 0);
        startActivity(intent);
    }

    public void pacotes(View view) {
        Intent intent = new Intent(this, MenuMainActivity.class);
        intent.putExtra(START_FRAGMENT, 1);
        startActivity(intent);
    }

    public void historico(View view) {
        Intent intent = new Intent(this, MenuMainActivity.class);
        intent.putExtra(START_FRAGMENT, 2);
        startActivity(intent);
    }

    public void ajuda(View view) {
        Intent intent = new Intent(this, MenuMainActivity.class);
        intent.putExtra(START_FRAGMENT, 3);
        startActivity(intent);
    }

    public void sobre(View view) {
        Intent intent = new Intent(this, MenuMainActivity.class);
        intent.putExtra(START_FRAGMENT, 4);
        startActivity(intent);
    }

    public void logout(View view) {

        SharedPreferences sharedPreferences = getSharedPreferences("MySharedPref",Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putString(TOKEN, null);
        editor.putString(USERID, null);
        editor.apply();

        Intent intent = new Intent(this, LoginActivity.class);
        startActivity(intent);
    }
}
